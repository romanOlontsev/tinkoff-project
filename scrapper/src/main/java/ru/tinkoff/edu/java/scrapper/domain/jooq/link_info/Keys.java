/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.link_info;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.Chat;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.GithubUpdates;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.Link;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.StackoverflowUpdates;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.records.ChatRecord;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.records.GithubUpdatesRecord;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.records.LinkRecord;
import ru.tinkoff.edu.java.scrapper.domain.jooq.link_info.tables.records.StackoverflowUpdatesRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * LINK_INFO.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> CONSTRAINT_1 = Internal.createUniqueKey(Chat.CHAT, DSL.name("CONSTRAINT_1"), new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final UniqueKey<GithubUpdatesRecord> CONSTRAINT_D = Internal.createUniqueKey(GithubUpdates.GITHUB_UPDATES, DSL.name("CONSTRAINT_D"), new TableField[] { GithubUpdates.GITHUB_UPDATES.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.ID }, true);
    public static final UniqueKey<StackoverflowUpdatesRecord> CONSTRAINT_3 = Internal.createUniqueKey(StackoverflowUpdates.STACKOVERFLOW_UPDATES, DSL.name("CONSTRAINT_3"), new TableField[] { StackoverflowUpdates.STACKOVERFLOW_UPDATES.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GithubUpdatesRecord, LinkRecord> CONSTRAINT_DE = Internal.createForeignKey(GithubUpdates.GITHUB_UPDATES, DSL.name("CONSTRAINT_DE"), new TableField[] { GithubUpdates.GITHUB_UPDATES.ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<LinkRecord, ChatRecord> CONSTRAINT_23A = Internal.createForeignKey(Link.LINK, DSL.name("CONSTRAINT_23A"), new TableField[] { Link.LINK.CHAT_ID }, Keys.CONSTRAINT_1, new TableField[] { Chat.CHAT.CHAT_ID }, true);
    public static final ForeignKey<StackoverflowUpdatesRecord, LinkRecord> CONSTRAINT_33 = Internal.createForeignKey(StackoverflowUpdates.STACKOVERFLOW_UPDATES, DSL.name("CONSTRAINT_33"), new TableField[] { StackoverflowUpdates.STACKOVERFLOW_UPDATES.ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
}
